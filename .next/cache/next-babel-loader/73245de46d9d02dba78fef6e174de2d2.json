{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, props.region.name), __jsx(\"h2\", null, props.region.capital), __jsx(\"h3\", null, props.region.region), __jsx(\"h3\", null, props.region.subregion), __jsx(\"h3\", null, props.region.population), __jsx(\"img\", {\n    src: props.region.flag\n  }));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var name, res, region;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = context.query.name;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(name));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            region = _context.sent;\n            console.log(\"Fetched country name: \".concat(name));\n            console.log(region);\n            console.log(region.name);\n            return _context.abrupt(\"return\", {\n              region: region\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/post.js"],"names":["Layout","fetch","Post","props","region","name","capital","subregion","population","flag","getInitialProps","context","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD,QACI,kBAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,CADJ,EAEI,kBAAKF,KAAK,CAACC,MAAN,CAAaE,OAAlB,CAFJ,EAGI,kBAAKH,KAAK,CAACC,MAAN,CAAaA,MAAlB,CAHJ,EAII,kBAAKD,KAAK,CAACC,MAAN,CAAaG,SAAlB,CAJJ,EAKI,kBAAKJ,KAAK,CAACC,MAAN,CAAaI,UAAlB,CALJ,EAMI;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,MAAN,CAAaK;AAAvB,IANJ,CADS;AAAA,CAAb;;KAAMP,I;;AAWNA,IAAI,CAACQ,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXN,YAAAA,IADW,GACFM,OAAO,CAACC,KADN,CACXP,IADW;AAAA;AAAA,mBAEDJ,KAAK,iDAA0CI,IAA1C,EAFJ;;AAAA;AAEbQ,YAAAA,GAFa;AAAA;AAAA,mBAGEA,GAAG,CAACC,IAAJ,EAHF;;AAAA;AAGbV,YAAAA,MAHa;AAKnBW,YAAAA,OAAO,CAACC,GAAR,iCAAsCX,IAAtC;AACAU,YAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAW,YAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACC,IAAnB;AAPmB,6CASZ;AAACD,cAAAA,MAAM,EAANA;AAAD,aATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeF,IAAf","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => (\n    <Layout>\n        <h1>{props.region.name}</h1>\n        <h2>{props.region.capital}</h2>\n        <h3>{props.region.region}</h3>\n        <h3>{props.region.subregion}</h3>\n        <h3>{props.region.population}</h3>\n        <img src={props.region.flag}/>\n    </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n    const { name } = context.query\n    const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\n    const region = await res.json()\n\n    console.log(`Fetched country name: ${(name)}`)\n    console.log(region)\n    console.log(region.name)\n\n    return {region}\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}