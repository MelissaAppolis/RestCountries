{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar code = regions.callingCodes;\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"African Countries\"), __jsx(\"ul\", null, props.regions.map(function (_ref) {\n    var region = _ref.region;\n    return __jsx(\"li\", {\n      key: region.code\n    }, __jsx(Link, {\n      as: \"/r/\".concat(region.code),\n      href: \"/post?regionalblock=\".concat(region.code)\n    }, __jsx(\"a\", null, region.name)));\n  })));\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://restcountries.eu/rest/v2/regionalbloc/au');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            regions: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/index.js"],"names":["Layout","Link","fetch","code","regions","callingCodes","Index","props","map","region","name","getInitialProps","res","json","data"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,YAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,MAAC,MAAD,QACI,sCADJ,EAEI,kBACKA,KAAK,CAACH,OAAN,CAAcI,GAAd,CAAkB;AAAA,QAAEC,MAAF,QAAEA,MAAF;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACN;AAAhB,OACI,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQM,MAAM,CAACN,IAAf,CAAR;AAA+B,MAAA,IAAI,gCAAyBM,MAAM,CAACN,IAAhC;AAAnC,OACI,iBAAIM,MAAM,CAACC,IAAX,CADJ,CADJ,CADe;AAAA,GAAlB,CADL,CAFJ,CADU;AAAA,CAAd;;KAAMJ,K;AAeNA,KAAK,CAACK,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFT,KAAK,CAAC,kDAAD,CADH;;AAAA;AACdU,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAAA,2CAIb;AACHV,YAAAA,OAAO,EAAEU;AADN,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAeR,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\n\nconst code = regions.callingCodes;\n\nconst Index = (props) => (\n    <Layout>\n        <h1>African Countries</h1>\n        <ul>\n            {props.regions.map(({region}) => (\n                <li key={region.code}>\n                    <Link as={`/r/${region.code}`} href={`/post?regionalblock=${region.code}`}>\n                        <a>{region.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n)\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://restcountries.eu/rest/v2/regionalbloc/au')\n    const data = await res.json()\n\n    return {\n        regions: data\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}