{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nconst container = {\n  margin: 'auto',\n  width: '35%',\n  textAlign: 'center',\n  marginTop: '20px',\n  backgroundColor: 'white',\n  paddingBottom: '10px',\n  boxShadow: '8px 5px 17px rgb(72, 77, 77)',\n  borderRadius: '5px'\n};\nconst imageStyle = {\n  width: '100%'\n};\nconst countryName = {\n  fontSize: '30px',\n  textTransform: 'uppercase',\n  color: 'rgb(118, 165, 165)',\n  letterSpacing: '2px',\n  marginTop: '0px',\n  marginBottom: '0px',\n  padding: '15px'\n};\nconst container2 = {\n  textAlign: 'left',\n  margin: 'auto',\n  width: '65%'\n};\n\nconst Post = props => __jsx(Layout, null, props.countries.map(country => __jsx(\"div\", {\n  key: country.name,\n  style: container,\n  className: \"jsx-1675858510\"\n}, __jsx(\"img\", {\n  style: imageStyle,\n  src: country.flag,\n  className: \"jsx-1675858510\"\n}), __jsx(\"h1\", {\n  style: countryName,\n  className: \"jsx-1675858510\"\n}, country.name), __jsx(\"div\", {\n  style: container2,\n  className: \"jsx-1675858510\"\n}, __jsx(\"h4\", {\n  className: \"jsx-1675858510\"\n}, __jsx(\"strong\", {\n  className: \"jsx-1675858510\"\n}, \"Region: \"), \" \", country.region), __jsx(\"h4\", {\n  className: \"jsx-1675858510\"\n}, __jsx(\"strong\", {\n  className: \"jsx-1675858510\"\n}, \"Sub-region: \"), \" \", country.subregion), __jsx(\"h4\", {\n  className: \"jsx-1675858510\"\n}, __jsx(\"strong\", {\n  className: \"jsx-1675858510\"\n}, \"Population: \"), \" \", country.population), __jsx(\"h4\", {\n  className: \"jsx-1675858510\"\n}, __jsx(\"strong\", {\n  className: \"jsx-1675858510\"\n}, \"Language: \"), \" \", country.languages[0].name), __jsx(\"h4\", {\n  className: \"jsx-1675858510\"\n}, __jsx(\"strong\", {\n  className: \"jsx-1675858510\"\n}, \"Currency: \"), \" \", country.currencies[0].name, \" (\", country.currencies[0].symbol, \")\")))), __jsx(_JSXStyle, {\n  id: \"1675858510\"\n}, \"h4.jsx-1675858510{color:rgb(95,131,131);text-transform:uppercase;font-size:18px;font-weight:500;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWxpc3NhL0Rlc2t0b3AvY291bnRyaWVzQVBJL3BhZ2VzL3Bvc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaURvQixBQUd5QyxzQkFDQyx5QkFDVixlQUNDLGdCQUNwQiIsImZpbGUiOiIvVXNlcnMvbWVsaXNzYS9EZXNrdG9wL2NvdW50cmllc0FQSS9wYWdlcy9wb3N0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXG5cbmNvbnN0IGNvbnRhaW5lciA9IHtcbiAgICBtYXJnaW46ICdhdXRvJyxcbiAgICB3aWR0aDogJzM1JScsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICBtYXJnaW5Ub3A6ICcyMHB4JyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgcGFkZGluZ0JvdHRvbTogJzEwcHgnLFxuICAgIGJveFNoYWRvdzogJzhweCA1cHggMTdweCByZ2IoNzIsIDc3LCA3NyknLFxuICAgIGJvcmRlclJhZGl1czogJzVweCdcbn1cblxuY29uc3QgaW1hZ2VTdHlsZSA9IHtcbiAgICB3aWR0aDogJzEwMCUnXG59XG5cbmNvbnN0IGNvdW50cnlOYW1lID0ge1xuICAgIGZvbnRTaXplOiAnMzBweCcsXG4gICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG4gICAgY29sb3I6ICdyZ2IoMTE4LCAxNjUsIDE2NSknLFxuICAgIGxldHRlclNwYWNpbmc6ICcycHgnLFxuICAgIG1hcmdpblRvcDogJzBweCcsXG4gICAgbWFyZ2luQm90dG9tOiAnMHB4JyxcbiAgICBwYWRkaW5nOiAnMTVweCdcbn1cblxuY29uc3QgY29udGFpbmVyMiA9IHtcbiAgICB0ZXh0QWxpZ246ICdsZWZ0JyxcbiAgICBtYXJnaW46ICdhdXRvJyxcbiAgICB3aWR0aDogJzY1JScsXG59XG5cbmNvbnN0IFBvc3QgPSAocHJvcHMpID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICB7cHJvcHMuY291bnRyaWVzLm1hcCgoY291bnRyeSkgPT4gKFxuICAgICAgICAgICAgPGRpdiBrZXk9e2NvdW50cnkubmFtZX0gc3R5bGU9e2NvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgPGltZyBzdHlsZT17aW1hZ2VTdHlsZX0gc3JjPXtjb3VudHJ5LmZsYWd9Lz5cbiAgICAgICAgICAgICAgICA8aDEgc3R5bGU9e2NvdW50cnlOYW1lfT57Y291bnRyeS5uYW1lfTwvaDE+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17Y29udGFpbmVyMn0+XG4gICAgICAgICAgICAgICAgICAgIDxoND48c3Ryb25nPlJlZ2lvbjogPC9zdHJvbmc+IHtjb3VudHJ5LnJlZ2lvbn08L2g0PlxuICAgICAgICAgICAgICAgICAgICA8aDQ+PHN0cm9uZz5TdWItcmVnaW9uOiA8L3N0cm9uZz4ge2NvdW50cnkuc3VicmVnaW9ufTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDxoND48c3Ryb25nPlBvcHVsYXRpb246IDwvc3Ryb25nPiB7Y291bnRyeS5wb3B1bGF0aW9ufTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDxoND48c3Ryb25nPkxhbmd1YWdlOiA8L3N0cm9uZz4ge2NvdW50cnkubGFuZ3VhZ2VzWzBdLm5hbWV9PC9oND5cbiAgICAgICAgICAgICAgICAgICAgPGg0PjxzdHJvbmc+Q3VycmVuY3k6IDwvc3Ryb25nPiB7Y291bnRyeS5jdXJyZW5jaWVzWzBdLm5hbWV9ICh7Y291bnRyeS5jdXJyZW5jaWVzWzBdLnN5bWJvbH0pPC9oND4gXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj4gICBcbiAgICAgICAgKSl9XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgIGg0IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDk1LCAxMzEsIDEzMSk7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuKVxuXG5Qb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgY29uc3Qge25hbWV9ICA9IGNvbnRleHQucXVlcnlcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmV1L3Jlc3QvdjIvbmFtZS8ke25hbWV9YClcbiAgICBjb25zdCBjb3VudHJ5ID0gYXdhaXQgcmVzLmpzb24oKVxuXG4gICAgY29uc29sZS5sb2coYEZldGNoZWQgY291bnRyeSBuYW1lOiAke2NvdW50cnkubmFtZX1gKVxuICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGNvdW50cnksIG51bGwsIDIpKVxuICAgIGNvbnNvbGUubG9nKG5hbWUpXG5cbiAgICByZXR1cm4geyBjb3VudHJpZXM6IGNvdW50cnkgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3N0OyJdfQ== */\\n/*@ sourceURL=/Users/melissa/Desktop/countriesAPI/pages/post.js */\"));\n\nPost.getInitialProps = async function (context) {\n  const {\n    name\n  } = context.query;\n  const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n  const country = await res.json();\n  console.log(`Fetched country name: ${country.name}`);\n  console.log(JSON.stringify(country, null, 2));\n  console.log(name);\n  return {\n    countries: country\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/post.js"],"names":["Layout","fetch","container","margin","width","textAlign","marginTop","backgroundColor","paddingBottom","boxShadow","borderRadius","imageStyle","countryName","fontSize","textTransform","color","letterSpacing","marginBottom","padding","container2","Post","props","countries","map","country","name","flag","region","subregion","population","languages","currencies","symbol","getInitialProps","context","query","res","json","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,MADM;AAEdC,EAAAA,KAAK,EAAE,KAFO;AAGdC,EAAAA,SAAS,EAAE,QAHG;AAIdC,EAAAA,SAAS,EAAE,MAJG;AAKdC,EAAAA,eAAe,EAAE,OALH;AAMdC,EAAAA,aAAa,EAAE,MAND;AAOdC,EAAAA,SAAS,EAAE,8BAPG;AAQdC,EAAAA,YAAY,EAAE;AARA,CAAlB;AAWA,MAAMC,UAAU,GAAG;AACfP,EAAAA,KAAK,EAAE;AADQ,CAAnB;AAIA,MAAMQ,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,MADM;AAEhBC,EAAAA,aAAa,EAAE,WAFC;AAGhBC,EAAAA,KAAK,EAAE,oBAHS;AAIhBC,EAAAA,aAAa,EAAE,KAJC;AAKhBV,EAAAA,SAAS,EAAE,KALK;AAMhBW,EAAAA,YAAY,EAAE,KANE;AAOhBC,EAAAA,OAAO,EAAE;AAPO,CAApB;AAUA,MAAMC,UAAU,GAAG;AACfd,EAAAA,SAAS,EAAE,MADI;AAEfF,EAAAA,MAAM,EAAE,MAFO;AAGfC,EAAAA,KAAK,EAAE;AAHQ,CAAnB;;AAMA,MAAMgB,IAAI,GAAIC,KAAD,IACT,MAAC,MAAD,QACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAqBC,OAAD,IACjB;AAAK,EAAA,GAAG,EAAEA,OAAO,CAACC,IAAlB;AAAwB,EAAA,KAAK,EAAEvB,SAA/B;AAAA;AAAA,GACI;AAAK,EAAA,KAAK,EAAES,UAAZ;AAAwB,EAAA,GAAG,EAAEa,OAAO,CAACE,IAArC;AAAA;AAAA,EADJ,EAEI;AAAI,EAAA,KAAK,EAAEd,WAAX;AAAA;AAAA,GAAyBY,OAAO,CAACC,IAAjC,CAFJ,EAGI;AAAK,EAAA,KAAK,EAAEN,UAAZ;AAAA;AAAA,GACI;AAAA;AAAA,GAAI;AAAA;AAAA,cAAJ,OAA+BK,OAAO,CAACG,MAAvC,CADJ,EAEI;AAAA;AAAA,GAAI;AAAA;AAAA,kBAAJ,OAAmCH,OAAO,CAACI,SAA3C,CAFJ,EAGI;AAAA;AAAA,GAAI;AAAA;AAAA,kBAAJ,OAAmCJ,OAAO,CAACK,UAA3C,CAHJ,EAII;AAAA;AAAA,GAAI;AAAA;AAAA,gBAAJ,OAAiCL,OAAO,CAACM,SAAR,CAAkB,CAAlB,EAAqBL,IAAtD,CAJJ,EAKI;AAAA;AAAA,GAAI;AAAA;AAAA,gBAAJ,OAAiCD,OAAO,CAACO,UAAR,CAAmB,CAAnB,EAAsBN,IAAvD,QAA+DD,OAAO,CAACO,UAAR,CAAmB,CAAnB,EAAsBC,MAArF,MALJ,CAHJ,CADH,CADL;AAAA;AAAA,i0GADJ;;AA0BAZ,IAAI,CAACa,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC5C,QAAM;AAACT,IAAAA;AAAD,MAAUS,OAAO,CAACC,KAAxB;AACA,QAAMC,GAAG,GAAG,MAAMnC,KAAK,CAAE,yCAAwCwB,IAAK,EAA/C,CAAvB;AACA,QAAMD,OAAO,GAAG,MAAMY,GAAG,CAACC,IAAJ,EAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBf,OAAO,CAACC,IAAK,EAAlD;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAejB,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AAEA,SAAO;AAAEH,IAAAA,SAAS,EAAEE;AAAb,GAAP;AACH,CAVD;;AAYA,eAAeJ,IAAf","sourcesContent":["import Layout from '../components/Layout'\nimport fetch from 'isomorphic-unfetch'\n\nconst container = {\n    margin: 'auto',\n    width: '35%',\n    textAlign: 'center',\n    marginTop: '20px',\n    backgroundColor: 'white',\n    paddingBottom: '10px',\n    boxShadow: '8px 5px 17px rgb(72, 77, 77)',\n    borderRadius: '5px'\n}\n\nconst imageStyle = {\n    width: '100%'\n}\n\nconst countryName = {\n    fontSize: '30px',\n    textTransform: 'uppercase',\n    color: 'rgb(118, 165, 165)',\n    letterSpacing: '2px',\n    marginTop: '0px',\n    marginBottom: '0px',\n    padding: '15px'\n}\n\nconst container2 = {\n    textAlign: 'left',\n    margin: 'auto',\n    width: '65%',\n}\n\nconst Post = (props) => (\n    <Layout>\n        {props.countries.map((country) => (\n            <div key={country.name} style={container}>\n                <img style={imageStyle} src={country.flag}/>\n                <h1 style={countryName}>{country.name}</h1>\n                <div style={container2}>\n                    <h4><strong>Region: </strong> {country.region}</h4>\n                    <h4><strong>Sub-region: </strong> {country.subregion}</h4>\n                    <h4><strong>Population: </strong> {country.population}</h4>\n                    <h4><strong>Language: </strong> {country.languages[0].name}</h4>\n                    <h4><strong>Currency: </strong> {country.currencies[0].name} ({country.currencies[0].symbol})</h4> \n                </div>\n            </div>   \n        ))}\n        <style jsx>{`\n            h4 {\n                color: rgb(95, 131, 131);\n                text-transform: uppercase;\n                font-size: 18px;\n                font-weight: 500;\n            }\n        `}</style>\n    </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n    const {name}  = context.query\n    const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\n    const country = await res.json()\n\n    console.log(`Fetched country name: ${country.name}`)\n    console.log(JSON.stringify(country, null, 2))\n    console.log(name)\n\n    return { countries: country }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}