{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch'; // install library to fetch data\n// Inline styling\n\nvar container = {\n  margin: 'auto',\n  width: '35%',\n  textAlign: 'center',\n  marginTop: '20px',\n  backgroundColor: 'white',\n  paddingBottom: '10px',\n  boxShadow: '7px 10px 17px rgb(72, 77, 77)',\n  borderRadius: '8px'\n};\nvar imageStyle = {\n  width: '100%',\n  borderTopLeftRadius: '8px',\n  borderTopRightRadius: '8px'\n};\nvar countryName = {\n  fontSize: '30px',\n  textTransform: 'uppercase',\n  color: 'rgb(118, 165, 165)',\n  letterSpacing: '2px',\n  marginTop: '0px',\n  marginBottom: '0px',\n  padding: '15px'\n};\nvar container2 = {\n  textAlign: 'left',\n  margin: 'auto',\n  width: '90%'\n}; // using array.map to create an array to display information that was fetch from the API\n// jsx styling is also used to style the div container\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, props.countries.map(function (country) {\n    return __jsx(\"div\", {\n      key: country.name,\n      style: container,\n      className: \"jsx-1675858510\"\n    }, __jsx(\"img\", {\n      style: imageStyle,\n      src: country.flag,\n      className: \"jsx-1675858510\"\n    }), __jsx(\"h1\", {\n      style: countryName,\n      className: \"jsx-1675858510\"\n    }, country.name), __jsx(\"div\", {\n      style: container2,\n      className: \"jsx-1675858510\"\n    }, __jsx(\"h4\", {\n      className: \"jsx-1675858510\"\n    }, __jsx(\"strong\", {\n      className: \"jsx-1675858510\"\n    }, \"Region: \"), \" \", country.region), __jsx(\"h4\", {\n      className: \"jsx-1675858510\"\n    }, __jsx(\"strong\", {\n      className: \"jsx-1675858510\"\n    }, \"Sub-region: \"), \" \", country.subregion), __jsx(\"h4\", {\n      className: \"jsx-1675858510\"\n    }, __jsx(\"strong\", {\n      className: \"jsx-1675858510\"\n    }, \"Population: \"), \" \", country.population), __jsx(\"h4\", {\n      className: \"jsx-1675858510\"\n    }, __jsx(\"strong\", {\n      className: \"jsx-1675858510\"\n    }, \"Language: \"), \" \", country.languages[0].name), __jsx(\"h4\", {\n      className: \"jsx-1675858510\"\n    }, __jsx(\"strong\", {\n      className: \"jsx-1675858510\"\n    }, \"Currency: \"), \" \", country.currencies[0].name, \" (\", country.currencies[0].symbol, \")\")));\n  }), __jsx(_JSXStyle, {\n    id: \"1675858510\"\n  }, [\"h4.jsx-1675858510{color:rgb(95,131,131);text-transform:uppercase;font-size:18px;font-weight:500;}\"]));\n};\n/* use getInitialProps to retrieve data from the Rest Countires API \nusing the name passed through from index.js.\nUsed country name from query params and fetched its country data from restcountries API */\n\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var name, res, country;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = context.query.name;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(name));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            country = _context.sent;\n            return _context.abrupt(\"return\", {\n              countries: country\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}