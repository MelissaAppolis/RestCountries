{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, __jsx(\"ul\", null, props.countries.map(function (a, index) {\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(\"h2\", null, a.name));\n  })));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var name, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = context.query.name;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(name));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            console.log(\"Fetched country name: \".concat(data.name)); //console.log(res)\n\n            return _context.abrupt(\"return\", {\n              countires: data\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/post.js"],"names":["Layout","fetch","Post","props","countries","map","a","index","name","getInitialProps","context","query","res","json","data","console","log","countires"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD,QACI,kBACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,UAACC,CAAD,EAAIC,KAAJ;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA;AAAT,OACI,kBAAKD,CAAC,CAACE,IAAP,CADJ,CADiB;AAAA,GAApB,CADL,CADJ,CADS;AAAA,CAAb;;KAAMN,I;;AAkBNA,IAAI,CAACO,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXF,YAAAA,IADW,GACFE,OAAO,CAACC,KADN,CACXH,IADW;AAAA;AAAA,mBAEDP,KAAK,iDAA0CO,IAA1C,EAFJ;;AAAA;AAEbI,YAAAA,GAFa;AAAA;AAAA,mBAGAA,GAAG,CAACC,IAAJ,EAHA;;AAAA;AAGbC,YAAAA,IAHa;AAKnBC,YAAAA,OAAO,CAACC,GAAR,iCAAqCF,IAAI,CAACN,IAA1C,GALmB,CAMnB;;AANmB,6CAQZ;AAAES,cAAAA,SAAS,EAAEH;AAAb,aARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeZ,IAAf","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => (\n    <Layout>\n        <ul>\n            {props.countries.map((a, index) => (\n                <li key={index}>\n                    <h2>{a.name}</h2>\n                </li>\n            ))}\n        </ul>\n        {/*<h1>{props.countryName.name}</h1>\n        <h2>{props.countryName.capital}</h2>\n        <h3>{props.countryName.region}</h3>\n        <h3>{props.countryName.subregion}</h3>\n        <h3>{props.countryName.population}</h3>\n<img src={props.countryName.flag}/>*/}\n    </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n    const { name } = context.query\n    const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\n    const data = await res.json()\n\n    console.log(`Fetched country name: ${data.name}`)\n    //console.log(res)\n\n    return { countires: data }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}