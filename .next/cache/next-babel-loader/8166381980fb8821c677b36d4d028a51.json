{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // install library to fetch data\n// Inline styling\n\nvar containerStyle = {\n  marginTop: '10px',\n  padding: '5px',\n  height: '64px',\n  cursor: 'pointer'\n};\nvar imageStyle = {\n  width: '100px',\n  height: '65px',\n  marginLeft: '1%',\n  \"float\": 'left'\n};\nvar linkStyle = {\n  textDecoration: 'none',\n  marginLeft: '10px',\n  \"float\": 'left',\n  marginTop: '5px',\n  paddingTop: '20px',\n  paddingBottom: '10px',\n  fontSize: '20px',\n  color: 'white',\n  textTransform: 'uppercase',\n  width: '70%',\n  height: '30px'\n}; // passing data via a query string parameter to get query name parameter\n// using array.map to create and display information from the API\n// using route masking to show a different URL in the broswer than actual URL by using the prop as in the <Link> element.\n// jsx styling is also used to style the div container\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, props.countries.map(function (country) {\n    return __jsx(\"div\", {\n      key: country.name,\n      style: containerStyle,\n      id: \"container\",\n      className: \"jsx-2268986531\"\n    }, __jsx(\"div\", {\n      className: \"jsx-2268986531\"\n    }, __jsx(\"img\", {\n      style: imageStyle,\n      src: country.flag,\n      className: \"jsx-2268986531\"\n    }), __jsx(Link, {\n      as: \"/p/\".concat(country.name),\n      href: \"/post?name=\".concat(country.name)\n    }, __jsx(\"a\", {\n      style: linkStyle,\n      className: \"jsx-2268986531\"\n    }, country.name))));\n  }), __jsx(_JSXStyle, {\n    id: \"2268986531\"\n  }, [\"#container.jsx-2268986531:hover{background-color:lightgrey;}\"]));\n};\n/* using async function getInitialProps to fetch countries \nwithin a regional bloc from the Rest Countriesa API for the Index page \npassed countries as props to the Index page */\n\n\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://restcountries.eu/rest/v2/regionalbloc/au');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            countries: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}