{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, props.countries.map(function (country) {\n    return __jsx(\"div\", {\n      key: country.name\n    }, __jsx(\"img\", {\n      src: country.flag\n    }), __jsx(\"h1\", null, country.name), __jsx(\"h4\", null, \"Region: \", country.region), __jsx(\"h4\", null, \"Sub-region: \", country.subregion), __jsx(\"h4\", null, \"Population: \", country.population), __jsx(\"h4\", null, \"Currency:\", country.currencies, country.currencies.name), __jsx(\"h4\", null, \"Language: \", country.languages.name));\n  }));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var name, res, country;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = context.query.name;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(name));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            country = _context.sent;\n            console.log(\"Fetched country name: \".concat(country.name));\n            console.log(JSON.stringify(country, null, 2));\n            console.log(name);\n            return _context.abrupt(\"return\", {\n              countries: country\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/post.js"],"names":["Layout","fetch","Post","props","countries","map","country","name","flag","region","subregion","population","currencies","languages","getInitialProps","context","query","res","json","console","log","JSON","stringify"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD,QACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,UAACC,OAAD;AAAA,WACjB;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC;AAAlB,OACI;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE;AAAlB,MADJ,EAEI,kBAAKF,OAAO,CAACC,IAAb,CAFJ,EAGI,8BAAaD,OAAO,CAACG,MAArB,CAHJ,EAII,kCAAiBH,OAAO,CAACI,SAAzB,CAJJ,EAKI,kCAAiBJ,OAAO,CAACK,UAAzB,CALJ,EAMI,+BAAcL,OAAO,CAACM,UAAtB,EAAkCN,OAAO,CAACM,UAAR,CAAmBL,IAArD,CANJ,EAOI,gCAAeD,OAAO,CAACO,SAAR,CAAkBN,IAAjC,CAPJ,CADiB;AAAA,GAApB,CADL,CADS;AAAA,CAAb;;KAAML,I;;AAyBNA,IAAI,CAACY,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZR,YAAAA,IADY,GACHQ,OAAO,CAACC,KADL,CACZT,IADY;AAAA;AAAA,mBAEDN,KAAK,iDAA0CM,IAA1C,EAFJ;;AAAA;AAEbU,YAAAA,GAFa;AAAA;AAAA,mBAGGA,GAAG,CAACC,IAAJ,EAHH;;AAAA;AAGbZ,YAAAA,OAHa;AAKnBa,YAAAA,OAAO,CAACC,GAAR,iCAAqCd,OAAO,CAACC,IAA7C;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAehB,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAZ;AACAa,YAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAPmB,6CASZ;AAAEH,cAAAA,SAAS,EAAEE;AAAb,aATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeJ,IAAf","sourcesContent":["import Layout from '../components/Layout'\nimport fetch from 'isomorphic-unfetch'\n\nconst Post = (props) => (\n    <Layout>\n        {props.countries.map((country) => (\n            <div key={country.name}>\n                <img src={country.flag}/>\n                <h1>{country.name}</h1>\n                <h4>Region: {country.region}</h4>\n                <h4>Sub-region: {country.subregion}</h4>\n                <h4>Population: {country.population}</h4>\n                <h4>Currency:{country.currencies}{country.currencies.name}</h4>\n                <h4>Language: {country.languages.name}</h4>\n            </div>\n            \n            \n        ))}\n        \n        {/*<h1>{props.country.name}</h1>\n        <h2>{props.country.capital}</h2>\n        <h3>{props.country.region}</h3>\n        <h3>{props.country.subregion}</h3>\n        <h3>{props.country.population}</h3>\n<img src={props.country.flag}/>*/}\n    </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n    const {name}  = context.query\n    const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\n    const country = await res.json()\n\n    console.log(`Fetched country name: ${country.name}`)\n    console.log(JSON.stringify(country, null, 2))\n    console.log(name)\n\n    return { countries: country }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}