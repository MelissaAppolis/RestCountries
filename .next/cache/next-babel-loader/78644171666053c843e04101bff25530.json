{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, props.countryName.name), __jsx(\"h2\", null, props.countryName.capital), __jsx(\"h3\", null, props.countryName.region), __jsx(\"h3\", null, props.countryName.subregion), __jsx(\"h3\", null, props.countryName.population), __jsx(\"img\", {\n    src: props.countryName.flag\n  }));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var name, res, countryName;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = context.query.name;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(name));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            countryName = _context.sent;\n            console.log(\"Fetched country name: \".concat(countryName.name)); //console.log(res)\n\n            return _context.abrupt(\"return\", {\n              props: countryName\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/post.js"],"names":["Layout","fetch","Post","props","countryName","name","capital","region","subregion","population","flag","getInitialProps","context","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD,QACI,kBAAKA,KAAK,CAACC,WAAN,CAAkBC,IAAvB,CADJ,EAEI,kBAAKF,KAAK,CAACC,WAAN,CAAkBE,OAAvB,CAFJ,EAGI,kBAAKH,KAAK,CAACC,WAAN,CAAkBG,MAAvB,CAHJ,EAII,kBAAKJ,KAAK,CAACC,WAAN,CAAkBI,SAAvB,CAJJ,EAKI,kBAAKL,KAAK,CAACC,WAAN,CAAkBK,UAAvB,CALJ,EAMI;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACC,WAAN,CAAkBM;AAA5B,IANJ,CADS;AAAA,CAAb;;KAAMR,I;;AAWNA,IAAI,CAACS,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXP,YAAAA,IADW,GACFO,OAAO,CAACC,KADN,CACXR,IADW;AAAA;AAAA,mBAEDJ,KAAK,iDAA0CI,IAA1C,EAFJ;;AAAA;AAEbS,YAAAA,GAFa;AAAA;AAAA,mBAGOA,GAAG,CAACC,IAAJ,EAHP;;AAAA;AAGbX,YAAAA,WAHa;AAKnBY,YAAAA,OAAO,CAACC,GAAR,iCAAqCb,WAAW,CAACC,IAAjD,GALmB,CAMnB;;AANmB,6CAQZ;AAAEF,cAAAA,KAAK,EAAEC;AAAT,aARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeF,IAAf","sourcesContent":["import Layout from '../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => (\n    <Layout>\n        <h1>{props.countryName.name}</h1>\n        <h2>{props.countryName.capital}</h2>\n        <h3>{props.countryName.region}</h3>\n        <h3>{props.countryName.subregion}</h3>\n        <h3>{props.countryName.population}</h3>\n        <img src={props.countryName.flag}/>\n    </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n    const { name } = context.query\n    const res = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\n    const countryName = await res.json()\n\n    console.log(`Fetched country name: ${countryName.name}`)\n    //console.log(res)\n\n    return { props: countryName }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}