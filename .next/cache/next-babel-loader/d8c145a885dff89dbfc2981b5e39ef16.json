{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // install library to fetch data\n// Inline styling\n\nconst containerStyle = {\n  marginTop: '10px',\n  padding: '5px',\n  height: '64px',\n  cursor: 'pointer'\n};\nconst imageStyle = {\n  width: '100px',\n  height: '65px',\n  marginLeft: '1%',\n  float: 'left'\n};\nconst linkStyle = {\n  textDecoration: 'none',\n  marginLeft: '10px',\n  float: 'left',\n  marginTop: '5px',\n  paddingTop: '20px',\n  paddingBottom: '10px',\n  fontSize: '20px',\n  color: 'white',\n  textTransform: 'uppercase',\n  width: '70%',\n  height: '30px'\n}; // passing data via a query string parameter to get query name parameter\n// using array.map to create and display information from the API\n// using route masking to show a different URL in the broswer than actual URL by using the prop as in the <Link> element.\n// jsx styling is also used to style the div container\n\nconst Index = props => __jsx(Layout, null, props.countries.map(country => __jsx(\"div\", {\n  key: country.name,\n  style: containerStyle,\n  id: \"container\",\n  className: \"jsx-2268986531\"\n}, __jsx(\"div\", {\n  className: \"jsx-2268986531\"\n}, __jsx(\"img\", {\n  style: imageStyle,\n  src: country.flag,\n  className: \"jsx-2268986531\"\n}), __jsx(Link, {\n  as: `/p/${country.name}`,\n  href: `/post?name=${country.name}`\n}, __jsx(\"a\", {\n  style: linkStyle,\n  className: \"jsx-2268986531\"\n}, country.name))))), __jsx(_JSXStyle, {\n  id: \"2268986531\"\n}, \"#container.jsx-2268986531:hover{background-color:lightgrey;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWxpc3NhL0Rlc2t0b3AvY291bnRyaWVzQVBJL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtEZ0IsQUFHd0MsMkJBRS9CIiwiZmlsZSI6Ii9Vc2Vycy9tZWxpc3NhL0Rlc2t0b3AvY291bnRyaWVzQVBJL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJzsvLyBpbnN0YWxsIGxpYnJhcnkgdG8gZmV0Y2ggZGF0YVxuXG4vLyBJbmxpbmUgc3R5bGluZ1xuY29uc3QgY29udGFpbmVyU3R5bGUgPSB7XG4gICAgbWFyZ2luVG9wOiAnMTBweCcsXG4gICAgcGFkZGluZzogJzVweCcsXG4gICAgaGVpZ2h0OiAnNjRweCcsXG4gICAgY3Vyc29yOiAncG9pbnRlcidcbn1cblxuY29uc3QgaW1hZ2VTdHlsZSA9IHtcbiAgICB3aWR0aDogJzEwMHB4JyxcbiAgICBoZWlnaHQ6ICc2NXB4JyxcbiAgICBtYXJnaW5MZWZ0OiAnMSUnLFxuICAgIGZsb2F0OiAnbGVmdCdcbn1cblxuY29uc3QgbGlua1N0eWxlID0ge1xuICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgbWFyZ2luTGVmdDogJzEwcHgnLFxuICAgIGZsb2F0OiAnbGVmdCcsXG4gICAgbWFyZ2luVG9wOiAnNXB4JyxcbiAgICBwYWRkaW5nVG9wOiAnMjBweCcsXG4gICAgcGFkZGluZ0JvdHRvbTogJzEwcHgnLFxuICAgIGZvbnRTaXplOiAnMjBweCcsXG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG4gICAgd2lkdGg6ICc3MCUnLFxuICAgIGhlaWdodDogJzMwcHgnLFxufVxuXG4vLyBwYXNzaW5nIGRhdGEgdmlhIGEgcXVlcnkgc3RyaW5nIHBhcmFtZXRlciB0byBnZXQgcXVlcnkgbmFtZSBwYXJhbWV0ZXJcbi8vIHVzaW5nIGFycmF5Lm1hcCB0byBjcmVhdGUgYW5kIGRpc3BsYXkgaW5mb3JtYXRpb24gZnJvbSB0aGUgQVBJXG4vLyB1c2luZyByb3V0ZSBtYXNraW5nIHRvIHNob3cgYSBkaWZmZXJlbnQgVVJMIGluIHRoZSBicm9zd2VyIHRoYW4gYWN0dWFsIFVSTCBieSB1c2luZyB0aGUgcHJvcCBhcyBpbiB0aGUgPExpbms+IGVsZW1lbnQuXG4vLyBqc3ggc3R5bGluZyBpcyBhbHNvIHVzZWQgdG8gc3R5bGUgdGhlIGRpdiBjb250YWluZXJcbmNvbnN0IEluZGV4ID0gKHByb3BzKSA9PiAoXG4gICAgPExheW91dD5cbiAgICAgICAgICAgIHtwcm9wcy5jb3VudHJpZXMubWFwKChjb3VudHJ5KSA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2NvdW50cnkubmFtZX0gc3R5bGU9e2NvbnRhaW5lclN0eWxlfSBpZD1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17aW1hZ2VTdHlsZX0gc3JjPXtjb3VudHJ5LmZsYWd9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGFzPXtgL3AvJHtjb3VudHJ5Lm5hbWV9YH0gaHJlZj17YC9wb3N0P25hbWU9JHtjb3VudHJ5Lm5hbWV9YH0+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHN0eWxlPXtsaW5rU3R5bGV9Pntjb3VudHJ5Lm5hbWV9PC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPiBcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApKX1cbiAgICA8c3R5bGUganN4PntgXG4gICAgICAgICNjb250YWluZXI6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5O1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4pXG5cbi8qIHVzaW5nIGFzeW5jIGZ1bmN0aW9uIGdldEluaXRpYWxQcm9wcyB0byBmZXRjaCBjb3VudHJpZXMgXG53aXRoaW4gYSByZWdpb25hbCBibG9jIGZyb20gdGhlIFJlc3QgQ291bnRyaWVzYSBBUEkgZm9yIHRoZSBJbmRleCBwYWdlIFxucGFzc2VkIGNvdW50cmllcyBhcyBwcm9wcyB0byB0aGUgSW5kZXggcGFnZSAqL1xuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcmVzdGNvdW50cmllcy5ldS9yZXN0L3YyL3JlZ2lvbmFsYmxvYy9hdScpXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKClcblxuICAgIHJldHVybiB7XG4gICAgICAgIGNvdW50cmllczogZGF0YVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7Il19 */\\n/*@ sourceURL=/Users/melissa/Desktop/countriesAPI/pages/index.js */\"));\n/* using async function getInitialProps to fetch countries \nwithin a regional bloc from the Rest Countriesa API for the Index page \npassed countries as props to the Index page */\n\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://restcountries.eu/rest/v2/regionalbloc/au');\n  const data = await res.json();\n  return {\n    countries: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/melissa/Desktop/countriesAPI/pages/index.js"],"names":["Layout","Link","fetch","containerStyle","marginTop","padding","height","cursor","imageStyle","width","marginLeft","float","linkStyle","textDecoration","paddingTop","paddingBottom","fontSize","color","textTransform","Index","props","countries","map","country","name","flag","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAAuC;AAEvC;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,MADQ;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,MAAM,EAAE,MAHW;AAInBC,EAAAA,MAAM,EAAE;AAJW,CAAvB;AAOA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,OADQ;AAEfH,EAAAA,MAAM,EAAE,MAFO;AAGfI,EAAAA,UAAU,EAAE,IAHG;AAIfC,EAAAA,KAAK,EAAE;AAJQ,CAAnB;AAOA,MAAMC,SAAS,GAAG;AACdC,EAAAA,cAAc,EAAE,MADF;AAEdH,EAAAA,UAAU,EAAE,MAFE;AAGdC,EAAAA,KAAK,EAAE,MAHO;AAIdP,EAAAA,SAAS,EAAE,KAJG;AAKdU,EAAAA,UAAU,EAAE,MALE;AAMdC,EAAAA,aAAa,EAAE,MAND;AAOdC,EAAAA,QAAQ,EAAE,MAPI;AAQdC,EAAAA,KAAK,EAAE,OARO;AASdC,EAAAA,aAAa,EAAE,WATD;AAUdT,EAAAA,KAAK,EAAE,KAVO;AAWdH,EAAAA,MAAM,EAAE;AAXM,CAAlB,C,CAcA;AACA;AACA;AACA;;AACA,MAAMa,KAAK,GAAIC,KAAD,IACV,MAAC,MAAD,QACSA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAqBC,OAAD,IACjB;AAAK,EAAA,GAAG,EAAEA,OAAO,CAACC,IAAlB;AAAwB,EAAA,KAAK,EAAErB,cAA/B;AAA+C,EAAA,EAAE,EAAC,WAAlD;AAAA;AAAA,GACI;AAAA;AAAA,GACI;AAAK,EAAA,KAAK,EAAEK,UAAZ;AAAwB,EAAA,GAAG,EAAEe,OAAO,CAACE,IAArC;AAAA;AAAA,EADJ,EAEI,MAAC,IAAD;AAAM,EAAA,EAAE,EAAG,MAAKF,OAAO,CAACC,IAAK,EAA7B;AAAgC,EAAA,IAAI,EAAG,cAAaD,OAAO,CAACC,IAAK;AAAjE,GACI;AAAG,EAAA,KAAK,EAAEZ,SAAV;AAAA;AAAA,GAAsBW,OAAO,CAACC,IAA9B,CADJ,CAFJ,CADJ,CADH,CADT;AAAA;AAAA,quGADJ;AAqBA;;;;;AAGAL,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC,kDAAD,CAAvB;AACA,QAAM0B,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACHR,IAAAA,SAAS,EAAEO;AADR,GAAP;AAGH,CAPD;;AASA,eAAeT,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';// install library to fetch data\n\n// Inline styling\nconst containerStyle = {\n    marginTop: '10px',\n    padding: '5px',\n    height: '64px',\n    cursor: 'pointer'\n}\n\nconst imageStyle = {\n    width: '100px',\n    height: '65px',\n    marginLeft: '1%',\n    float: 'left'\n}\n\nconst linkStyle = {\n    textDecoration: 'none',\n    marginLeft: '10px',\n    float: 'left',\n    marginTop: '5px',\n    paddingTop: '20px',\n    paddingBottom: '10px',\n    fontSize: '20px',\n    color: 'white',\n    textTransform: 'uppercase',\n    width: '70%',\n    height: '30px',\n}\n\n// passing data via a query string parameter to get query name parameter\n// using array.map to create and display information from the API\n// using route masking to show a different URL in the broswer than actual URL by using the prop as in the <Link> element.\n// jsx styling is also used to style the div container\nconst Index = (props) => (\n    <Layout>\n            {props.countries.map((country) => (\n                <div key={country.name} style={containerStyle} id=\"container\">\n                    <div>\n                        <img style={imageStyle} src={country.flag}/>\n                        <Link as={`/p/${country.name}`} href={`/post?name=${country.name}`}> \n                            <a style={linkStyle}>{country.name}</a>\n                        </Link> \n                    </div>\n                </div>\n            ))}\n    <style jsx>{`\n        #container:hover {\n            background-color: lightgrey;\n            \n        }\n    `}</style>\n    </Layout>\n)\n\n/* using async function getInitialProps to fetch countries \nwithin a regional bloc from the Rest Countriesa API for the Index page \npassed countries as props to the Index page */\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://restcountries.eu/rest/v2/regionalbloc/au')\n    const data = await res.json()\n\n    return {\n        countries: data\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}